{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { WebView } from 'react-native-webview';\nimport * as imagecapture from 'expo-image-picker';\nimport * as permission from 'expo-permissions';\nimport { useState, useEffect } from 'react';\n\nfunction loadPermission() {\n  var _await$permission$ask, granted;\n\n  return _regeneratorRuntime.async(function loadPermission$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          Alert.alert(\"inside function\");\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(permission.askAsync(permission.CAMERA));\n\n        case 4:\n          _await$permission$ask = _context.sent;\n          granted = _await$permission$ask.granted;\n\n          if (granted) {\n            Alert.alert(\"Permission provided\");\n          } else {\n            Alert.alert(\"Need Permission\");\n          }\n\n          _context.next = 12;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](1);\n          alert(_context.t0);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 9]], Promise);\n}\n\nexport default function App() {\n  useEffect(function () {\n    loadPermission();\n  }, []);\n  return React.createElement(WebView, {\n    mediaPlaybackRequiresUserAction: false,\n    javaScriptEnabled: true,\n    source: {\n      uri: 'https://new.yourvideo.live/617bab415dae7262c0aca609'\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/user/Desktop/Vcloudx/projects/ReactNative/ReactNative_LowCode/App.js"],"names":["StatusBar","React","WebView","imagecapture","permission","useState","useEffect","loadPermission","Alert","alert","askAsync","CAMERA","granted","App","uri","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;AAEA,SAASC,OAAT,QAAwB,sBAAxB;AACA,OAAO,KAAKC,YAAZ,MAA8B,mBAA9B;AACA,OAAO,KAAKC,UAAZ,MAA4B,kBAA5B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAAeC,cAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AACEC,UAAAA,KAAK,CAACC,KAAN,CAAY,iBAAZ;AADF;AAAA;AAAA,2CAG4BL,UAAU,CAACM,QAAX,CAAoBN,UAAU,CAACO,MAA/B,CAH5B;;AAAA;AAAA;AAGWC,UAAAA,OAHX,yBAGWA,OAHX;;AAII,cAAGA,OAAH,EAAW;AACTJ,YAAAA,KAAK,CAACC,KAAN,CAAY,qBAAZ;AACD,WAFD,MAEK;AACHD,YAAAA,KAAK,CAACC,KAAN,CAAY,iBAAZ;AACD;;AARL;AAAA;;AAAA;AAAA;AAAA;AAUMA,UAAAA,KAAK,aAAL;;AAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA4BA,eAAe,SAASI,GAAT,GAAe;AAE5BP,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,cAAc;AAEb,GAHM,EAGJ,EAHI,CAAT;AAMA,SACE,oBAAC,OAAD;AACA,IAAA,+BAA+B,EAAE,KADjC;AAEA,IAAA,iBAAiB,EAAE,IAFnB;AAGA,IAAA,MAAM,EAAE;AAAEO,MAAAA,GAAG,EAAE;AAAP;AAHR,IADF;AAMD;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { Alert, Button, StyleSheet, Text, View } from 'react-native';\nimport { WebView } from 'react-native-webview';\nimport * as imagecapture from 'expo-image-picker';\nimport * as permission from 'expo-permissions';\nimport { useState, useEffect } from 'react';\n\nasync function loadPermission(){\n  Alert.alert(\"inside function\");\n  try{\n    const {granted} = await permission.askAsync(permission.CAMERA);\n    if(granted){\n      Alert.alert(\"Permission provided\");\n    }else{\n      Alert.alert(\"Need Permission\");\n    }\n  }catch(error){\n      alert(error)\n  }\n  \n}\n/*export const temp = async () => {\n    try {\n      Alert.alert(\"Hello India\");\n      const {granted} = await permission.askAsync(permission.CAMERA_ROLL);\n      if(granted){\n        Alert.alert(\"Permission provided\");\n      }else{\n        Alert.alert(\"Need Permission\");\n      }\n    } catch (error) {\n      Alert.alert(\"Error\");\n    }\n  };*/\n\nexport default function App() {\n\n  useEffect(() => {\n    loadPermission();\n    \n    }, [])\n    \n\n  return (\n    <WebView \n    mediaPlaybackRequiresUserAction={false}\n    javaScriptEnabled={true}\n    source={{ uri: 'https://new.yourvideo.live/617bab415dae7262c0aca609' }} />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}